/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module adder_4 (
    input clk,
    input rst,
    input [15:0] a,
    input [15:0] b,
    input [5:0] alufn,
    output reg [15:0] aluOut,
    output reg z,
    output reg v,
    output reg n
  );
  
  
  
  reg [15:0] sum;
  
  wire [16-1:0] M_alu_aluOut;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu_3 alu (
    .rst(rst),
    .clk(clk),
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .aluOut(M_alu_aluOut),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  always @* begin
    M_alu_a = a;
    M_alu_b = b;
    aluOut = 16'h0000;
    M_alu_alufn = alufn;
    sum = 16'h0000;
    v = 1'h0;
    n = 1'h0;
    
    case (alufn[0+1-:2])
      2'h0: begin
        sum = a + b;
        v = (a[15+0-:1] & b[15+0-:1] & ~sum[15+0-:1]) | (~a[15+0-:1] & ~b[15+0-:1] & sum[15+0-:1]);
      end
      2'h1: begin
        sum = a - b;
        v = (a[15+0-:1] & b[15+0-:1] & ~sum[15+0-:1]) | (~a[15+0-:1] & ~b[15+0-:1] & sum[15+0-:1]);
      end
      2'h2: begin
        sum = a * b;
        v = (a[15+0-:1] & b[15+0-:1] & ~sum[15+0-:1]) | (~a[15+0-:1] & ~b[15+0-:1] & sum[15+0-:1]);
      end
      default: begin
        sum = a + b;
        v = (a[15+0-:1] & b[15+0-:1] & ~sum[15+0-:1]) | (~a[15+0-:1] & ~b[15+0-:1] & sum[15+0-:1]);
      end
    endcase
    aluOut = sum;
    if (sum == 16'h0000) begin
      z = 1'h1;
    end else begin
      z = 1'h0;
    end
    n = sum[15+0-:1];
  end
endmodule
