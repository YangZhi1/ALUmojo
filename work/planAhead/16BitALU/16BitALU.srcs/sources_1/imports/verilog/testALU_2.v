/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module testALU_2 (
    input clk,
    input rst,
    input [4:0] io_button,
    output reg [23:0] io_led,
    input [23:0] io_dip,
    output reg [27:0] sevensegdisp
  );
  
  
  
  reg [15:0] seta;
  
  reg [15:0] setb;
  
  reg [15:0] sum;
  
  localparam SETA_state = 4'd0;
  localparam SETB_state = 4'd1;
  localparam ADD_state = 4'd2;
  localparam SUB_state = 4'd3;
  localparam AND_state = 4'd4;
  localparam OR_state = 4'd5;
  localparam XOR_state = 4'd6;
  localparam LDR_state = 4'd7;
  localparam SHL_state = 4'd8;
  localparam SHR_state = 4'd9;
  localparam SRA_state = 4'd10;
  localparam CMPEQ_state = 4'd11;
  localparam CMPLT_state = 4'd12;
  localparam CMPLE_state = 4'd13;
  localparam MULT_state = 4'd14;
  
  reg [3:0] M_state_d, M_state_q = SETA_state;
  wire [16-1:0] M_alu_aluOut;
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu_3 alu (
    .clk(clk),
    .rst(rst),
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .aluOut(M_alu_aluOut),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n)
  );
  
  always @* begin
    M_state_d = M_state_q;
    
    seta = 16'h0000;
    setb = 16'h0000;
    M_alu_a = 16'h0000;
    M_alu_b = 16'h0000;
    M_alu_alufn = 6'h00;
    io_led = 24'h000000;
    sevensegdisp = 28'hd1a4000;
    
    case (M_state_q)
      SETA_state: begin
        seta[0+7-:8] = io_dip[0+7-:8];
        seta[8+7-:8] = io_dip[8+7-:8];
        sevensegdisp = 28'ha716a41;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = SETB_state;
        end
      end
      SETB_state: begin
        setb[0+7-:8] = io_dip[0+7-:8];
        setb[8+7-:8] = io_dip[8+7-:8];
        sevensegdisp = 28'ha716a42;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = ADD_state;
        end
      end
      ADD_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h00;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h8312200;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = SUB_state;
        end
      end
      SUB_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h01;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'ha756100;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = AND_state;
        end
      end
      AND_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h18;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h833a200;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = OR_state;
        end
      end
      OR_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h1e;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h9f48000;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = XOR_state;
        end
      end
      XOR_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h16;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'hb13e900;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = LDR_state;
        end
      end
      LDR_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h1a;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h9912900;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = SHL_state;
        end
      end
      SHL_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h20;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'ha722600;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = SHR_state;
        end
      end
      SHR_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h21;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'ha722900;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = SRA_state;
        end
      end
      SRA_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h23;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'ha74a080;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = CMPEQ_state;
        end
      end
      CMPEQ_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h33;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h8716880;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = CMPLT_state;
        end
      end
      CMPLT_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h35;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h8732a00;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = CMPLE_state;
        end
      end
      CMPLE_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h37;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h8732280;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = MULT_state;
        end
      end
      MULT_state: begin
        M_alu_a = seta;
        M_alu_b = setb;
        M_alu_alufn = 6'h02;
        sum = M_alu_aluOut;
        io_led[0+7-:8] = sum[0+7-:8];
        io_led[8+7-:8] = sum[8+7-:8];
        sevensegdisp = 28'h9b56600;
        if (io_button[1+0-:1] == 1'h1) begin
          M_state_d = MULT_state;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_state_q <= 1'h0;
    end else begin
      M_state_q <= M_state_d;
    end
  end
  
endmodule
